using OrdinaryDiffEq
const ODE = OrdinaryDiffEq

bickleyJet =  ODE.ODEFunction{false}(((var"#35#u", var"#36#p", var"#37#t")->begin
                SVector{2}(-((-0.00012532 * (0.0075 * cos(0.313922461152095 * (var"#35#u"[1] - var"#37#t" * (2.888626e-5 - 1.604096e-5 * (-1 + √5)))) + 0.15 * cos(0.627844922304191 * (-1.28453e-5var"#37#t" + var"#35#u"[1])) + 0.3 * cos(0.941767383456286 * (-2.888626e-5var"#37#t" + var"#35#u"[1]))) * sech(0.564971751412429 * var"#35#u"[2]) ^ 2 * tanh(0.564971751412429 * var"#35#u"[2]) - 6.266e-5 * (1 - tanh(0.564971751412429 * var"#35#u"[2]) ^ 2))), 0.0001109082 * ((-0.00235441845864072 * sin(0.313922461152095 * (var"#35#u"[1] - var"#37#t" * (2.888626e-5 - 1.604096e-5 * (-1 + √5)))) - 0.0941767383456286 * sin(0.627844922304191 * (-1.28453e-5var"#37#t" + var"#35#u"[1]))) - 0.282530215036886 * sin(0.941767383456286 * (-2.888626e-5var"#37#t" + var"#35#u"[1]))) * sech(0.564971751412429 * var"#35#u"[2]) ^ 2)
            end))

bickleyJet! = ODE.ODEFunction{true}((du, u, p, t) -> du .= bickleyJet(u, p, t))

bickleyJetEqVari =  (ODE).ODEFunction{false}(((var"#41#u", var"#42#p", var"#43#t")->begin
                var"#38#X" = SMatrix{2, 2}(var"#41#u"[1, 2], var"#41#u"[2, 2], var"#41#u"[1, 3], var"#41#u"[2, 3])
                var"#39#DV" = SMatrix{2, 2}(-(-0.00012532 * ((-0.00235441845864071 * sin(0.313922461152095 * (var"#41#u"[1, 1] - var"#43#t" * (2.888626e-5 - 1.604096e-5 * (-1 + √5)))) - 0.0941767383456286 * sin(0.627844922304191 * (-1.28453e-5var"#43#t" + var"#41#u"[1, 1]))) - 0.282530215036886 * sin(0.941767383456286 * (-2.888626e-5var"#43#t" + var"#41#u"[1, 1]))) * sech(0.564971751412429 * var"#41#u"[2, 1]) ^ 2 * tanh(0.564971751412429 * var"#41#u"[2, 1])), 0.0001109082 * ((-0.000739104837118417 * cos(0.313922461152095 * (var"#41#u"[1, 1] - var"#43#t" * (2.888626e-5 - 1.604096e-5 * (-1 + √5)))) - 0.0591283869694733 * cos(0.627844922304191 * (-1.28453e-5var"#43#t" + var"#41#u"[1, 1]))) - 0.26607774136263 * cos(0.941767383456286 * (-2.888626e-5var"#43#t" + var"#41#u"[1, 1]))) * sech(0.564971751412429 * var"#41#u"[2, 1]) ^ 2, -(((+(7.08022598870056e-5 * (1 - tanh(0.564971751412429 * var"#41#u"[2, 1]) ^ 2) * tanh(0.564971751412429 * var"#41#u"[2, 1])) - 7.08022598870056e-5 * (1 - tanh(0.564971751412429 * var"#41#u"[2, 1]) ^ 2) * (0.0075 * cos(0.313922461152095 * (var"#41#u"[1, 1] - var"#43#t" * (2.888626e-5 - 1.604096e-5 * (-1 + √5)))) + 0.15 * cos(0.627844922304191 * (-1.28453e-5var"#43#t" + var"#41#u"[1, 1])) + 0.3 * cos(0.941767383456286 * (-2.888626e-5var"#43#t" + var"#41#u"[1, 1]))) * sech(0.564971751412429 * var"#41#u"[2, 1]) ^ 2) + 0.000141604519774011 * (0.0075 * cos(0.313922461152095 * (var"#41#u"[1, 1] - var"#43#t" * (2.888626e-5 - 1.604096e-5 * (-1 + √5)))) + 0.15 * cos(0.627844922304191 * (-1.28453e-5var"#43#t" + var"#41#u"[1, 1])) + 0.3 * cos(0.941767383456286 * (-2.888626e-5var"#43#t" + var"#41#u"[1, 1]))) * sech(0.564971751412429 * var"#41#u"[2, 1]) ^ 2 * tanh(0.564971751412429 * var"#41#u"[2, 1]) ^ 2)), -0.00012532 * ((-0.00235441845864072 * sin(0.313922461152095 * (var"#41#u"[1, 1] - var"#43#t" * (2.888626e-5 - 1.604096e-5 * (-1 + √5)))) - 0.0941767383456286 * sin(0.627844922304191 * (-1.28453e-5var"#43#t" + var"#41#u"[1, 1]))) - 0.282530215036886 * sin(0.941767383456286 * (-2.888626e-5var"#43#t" + var"#41#u"[1, 1]))) * sech(0.564971751412429 * var"#41#u"[2, 1]) ^ 2 * tanh(0.564971751412429 * var"#41#u"[2, 1]))
                var"#40#DX" = var"#39#DV" * var"#38#X"
                return SMatrix{2, 3}(-((-0.00012532 * (0.0075 * cos(0.313922461152095 * (var"#41#u"[1, 1] - var"#43#t" * (2.888626e-5 - 1.604096e-5 * (-1 + √5)))) + 0.15 * cos(0.627844922304191 * (-1.28453e-5var"#43#t" + var"#41#u"[1, 1])) + 0.3 * cos(0.941767383456286 * (-2.888626e-5var"#43#t" + var"#41#u"[1, 1]))) * sech(0.564971751412429 * var"#41#u"[2, 1]) ^ 2 * tanh(0.564971751412429 * var"#41#u"[2, 1]) - 6.266e-5 * (1 - tanh(0.564971751412429 * var"#41#u"[2, 1]) ^ 2))), 0.0001109082 * ((-0.00235441845864072 * sin(0.313922461152095 * (var"#41#u"[1, 1] - var"#43#t" * (2.888626e-5 - 1.604096e-5 * (-1 + √5)))) - 0.0941767383456286 * sin(0.627844922304191 * (-1.28453e-5var"#43#t" + var"#41#u"[1, 1]))) - 0.282530215036886 * sin(0.941767383456286 * (-2.888626e-5var"#43#t" + var"#41#u"[1, 1]))) * sech(0.564971751412429 * var"#41#u"[2, 1]) ^ 2, var"#40#DX"[1, 1], var"#40#DX"[2, 1], var"#40#DX"[1, 2], var"#40#DX"[2, 2])
            end))

bickleyJetEqVari! = ODE.ODEFunction{true}((DU, U, p, t) -> DU .= bickleyJetEqVari(U, p, t))

